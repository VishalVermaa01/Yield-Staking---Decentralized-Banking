{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport exp from \"constants\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport React, { Component } from \"react\";\nimport { DivMode } from \"react-particles-js\";\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                console.log('Using window.ethereum');\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                _context2.next = 13;\n                break;\n\n              case 7:\n                if (!window.web3) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log('Using window.web3.currentPRovider');\n                window.web3 = new Web3(window.web3.currentProvider);\n                _context2.next = 13;\n                break;\n\n              case 12:\n                throw new Error('No ethereum browser detected! You can check out metamask');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load tether contract\n                tetherData = Tether.networks[networkId];\n\n                if (tetherData) {\n                  tether = web3.eth.Contract;\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } //react code goes here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/truffle/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["exp","Navbar","React","Component","DivMode","Web3","Tether","App","loadWeb3","loadBlockchainData","window","ethereum","console","log","web3","enable","currentProvider","Error","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","props","state","rwd","decentralBank","tetherBalance","rwdBalance","stakingBalance","loading"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAGMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAKHC,MAAM,CAACC,Q;;;;;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAH,gBAAAA,MAAM,CAACI,IAAP,GAAc,IAAIT,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBI,MAAhB,E;;;;;;;qBACAL,MAAM,CAACI,I;;;;;AACbF,gBAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAH,gBAAAA,MAAM,CAACI,IAAP,GAAc,IAAIT,IAAJ,CAASK,MAAM,CAACI,IAAP,CAAYE,eAArB,CAAd;;;;;sBAEU,IAAIC,KAAJ,CAAU,0DAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;AAKRH,gBAAAA,I,GAAOJ,MAAM,CAACI,I;;uBACEA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAhBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAACD,kBAAAA,OAAO,EAACA,OAAO,CAAC,CAAD;AAAhB,iBAAd;;uBACwBN,IAAI,CAACI,GAAL,CAASI,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AAEN;AACMC,gBAAAA,U,GAAanB,MAAM,CAACoB,QAAP,CAAgBF,SAAhB,C;;AACnB,oBAAGC,UAAH,EAAe;AACLE,kBAAAA,MADK,GACIb,IAAI,CAACI,GAAL,CAASU,QADb;AAEd;;;;;;;;;;;;;;;;;;AAOL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTV,MAAAA,OAAO,EAAE,KADA;AAETO,MAAAA,MAAM,EAAC,EAFE;AAGTI,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,aAAa,EAAC,EAJL;AAKTC,MAAAA,aAAa,EAAC,GALL;AAMTC,MAAAA,UAAU,EAAC,GANF;AAOTC,MAAAA,cAAc,EAAC,GAPN;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAFc;AAYjB,G,CACD;;;;;6BACS;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWV,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEQ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADJ;AAaH;;;;EAlEajB,S;;AAqElB,eAAeI,GAAf","sourcesContent":["import exp from \"constants\";\r\nimport './App.css'\r\nimport Navbar from './Navbar.js'\r\nimport React, {Component} from \"react\";\r\nimport { DivMode } from \"react-particles-js\";\r\nimport Web3 from 'web3';\r\nimport Tether from '../truffle_abis/Tether.json'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    async UNSAFE_componentWillMount() {        \r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        \r\n    }\r\n\r\n    async loadWeb3() {\r\n        if(window.ethereum) {\r\n            console.log('Using window.ethereum')\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } else if(window.web3){\r\n            console.log('Using window.web3.currentPRovider')\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n            }else{\r\n                throw new Error('No ethereum browser detected! You can check out metamask')\r\n            }\r\n        }\r\n    \r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const account = await web3.eth.getAccounts()\r\n        this.setState({account:account[0]})\r\n        const networkId = await web3.eth.net.getId()\r\n\r\n        //load tether contract\r\n        const tetherData = Tether.networks[networkId]\r\n        if(tetherData) {\r\n            const tether = web3.eth.Contract\r\n        }\r\n\r\n        \r\n        \r\n\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            tether:{},\r\n            rwd: {},\r\n            decentralBank:{},\r\n            tetherBalance:'0',\r\n            rwdBalance:'0',\r\n            stakingBalance:'0',\r\n            loading: true\r\n        }\r\n    }\r\n    //react code goes here\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar account={this.state.account}/>\r\n                    <div className=\"text-center\">\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n            \r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}