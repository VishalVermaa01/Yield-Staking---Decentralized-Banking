{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\truffle\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport exp from \"constants\";\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport React, { Component } from \"react\";\nimport { DivMode } from \"react-particles-js\";\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main from './Main.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                console.log('Using window.ethereum');\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                _context2.next = 13;\n                break;\n\n              case 7:\n                if (!window.web3) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log('Using window.web3.currentPRovider');\n                window.web3 = new Web3(window.web3.currentProvider);\n                _context2.next = 13;\n                break;\n\n              case 12:\n                throw new Error('No ethereum browser detected! You can check out metamask');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load tether contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                window.alert('Error! Tether contract not deployed - no detected network');\n\n              case 20:\n                //load RWD contract\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 26;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  balance: rwdBalance\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('Error! RWD contract not deployed - no detected network');\n\n              case 32:\n                //load DecentralBank contract\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 43;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 38;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 38:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log({\n                  balance: stakingBalance\n                });\n                _context3.next = 44;\n                break;\n\n              case 43:\n                window.alert('Error! Decentral Bank contract not deployed - no detected network');\n\n              case 44:\n                this.setState({\n                  loading: false\n                });\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  } //react code goes here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading;\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/truffle/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["exp","Navbar","React","Component","DivMode","Web3","Tether","RWD","DecentralBank","Main","App","loadWeb3","loadBlockchainData","window","ethereum","console","log","web3","enable","currentProvider","Error","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","balance","alert","rwdData","rwd","rwdBalance","decentralBankData","decentralBank","stakingBalance","loading","props","content","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import exp from \"constants\";\r\nimport './App.css'\r\nimport Navbar from './Navbar.js'\r\nimport React, {Component} from \"react\";\r\nimport { DivMode } from \"react-particles-js\";\r\nimport Web3 from 'web3';\r\nimport Tether from '../truffle_abis/Tether.json'\r\nimport RWD from '../truffle_abis/RWD.json'\r\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\r\nimport Main from './Main.js'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    async UNSAFE_componentWillMount() {        \r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n        \r\n    }\r\n\r\n    async loadWeb3() {\r\n        if(window.ethereum) {\r\n            console.log('Using window.ethereum')\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } else if(window.web3){\r\n            console.log('Using window.web3.currentPRovider')\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n            }else{\r\n                throw new Error('No ethereum browser detected! You can check out metamask')\r\n            }\r\n        }\r\n    \r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const account = await web3.eth.getAccounts()\r\n        this.setState({account:account[0]})\r\n        const networkId = await web3.eth.net.getId()\r\n\r\n        //load tether contract\r\n        const tetherData = Tether.networks[networkId]\r\n        if(tetherData) {\r\n            const tether = new web3.eth.Contract(Tether.abi,tetherData.address)\r\n            this.setState({tether})\r\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n            this.setState({tetherBalance: tetherBalance.toString() })\r\n            console.log({balance: tetherBalance})\r\n        } else {\r\n            window.alert('Error! Tether contract not deployed - no detected network')\r\n        }    \r\n        \r\n        \r\n         //load RWD contract\r\n         const rwdData = RWD.networks[networkId]\r\n         if(rwdData) {\r\n             const rwd = new web3.eth.Contract(RWD.abi,rwdData.address)\r\n             this.setState({rwd})\r\n             let rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\r\n             this.setState({rwdBalance: rwdBalance.toString() })\r\n             console.log({balance: rwdBalance})\r\n         } else {\r\n             window.alert('Error! RWD contract not deployed - no detected network')\r\n         } \r\n\r\n         //load DecentralBank contract\r\n         const decentralBankData = DecentralBank.networks[networkId]\r\n         if(decentralBankData) {\r\n             const decentralBank = new web3.eth.Contract(DecentralBank.abi,decentralBankData.address)\r\n             this.setState({decentralBank})\r\n             let stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call()\r\n             this.setState({stakingBalance: stakingBalance.toString() })\r\n             console.log({balance: stakingBalance})\r\n         } else {\r\n             window.alert('Error! Decentral Bank contract not deployed - no detected network')\r\n         } \r\n        \r\n        this.setState({loading: false})\r\n\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            tether:{},\r\n            rwd: {},\r\n            decentralBank:{},\r\n            tetherBalance:'0',\r\n            rwdBalance:'0',\r\n            stakingBalance:'0',\r\n            loading: true\r\n        }\r\n    }\r\n    //react code goes here\r\n    render() {\r\n        let content\r\n        {this.state.loading}\r\n        return(\r\n            <div>\r\n                <Navbar account={this.state.account}/>\r\n\r\n                    <div className=\"container-fluid mt-5\">\r\n                        <div className='row'>\r\n                            <main role='main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth:'600px',minHeight:'100vm'}}>\r\n                                <div>\r\n                                    <Main/>\r\n                                </div>\r\n\r\n                            </main>\r\n                        </div>                                         \r\n                    </div>\r\n            </div>\r\n        )\r\n            \r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}